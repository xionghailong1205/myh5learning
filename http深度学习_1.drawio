<mxfile host="app.diagrams.net" modified="2022-07-29T10:50:25.814Z" agent="5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36" etag="uH6NPWtk_1VNHRgvRN1u" version="20.2.2" type="github">
  <diagram id="brdhYFpfjT7XCx1ra--G" name="第 1 页">
    <mxGraphModel dx="2365" dy="1368" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1920" pageHeight="1200" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="lxqem7iOndfJjzKsoJMx-1" value="&lt;h1&gt;协议版本&lt;/h1&gt;&lt;div&gt;现在使用的HTTP版本有几个版本。HTTP应用程序要尽量强健地处理各种不同的HTTP协议变体。目前仍在使用的版本如下。&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;HTTP/0.9&lt;/div&gt;&lt;div&gt;HTTP的1991原型版本称为HTTP/0.9。这个协议有很多严重的设计缺陷，值应该用于与老客户端的交互。HTTP/0.9只支持GET方法，不支持多媒体内容的MIME类型、各种HTTp首部，或者版本号。&lt;/div&gt;&lt;div&gt;HTTP/1.0&lt;/div&gt;&lt;div&gt;1.0是第一个得到广泛使用的HTTP版本。HTTP/1,0添加了版本号各种HTTP首部、一些额外的方法，以及对多媒体对象的处理。HTTP/1.0使得包含生动图片的Web页面和交互式表格成为可能，而这些页面和表格促使万维网为人们广泛地接受。这个规范从未得到良好地说明，但是它集合了一系列的最佳实践。&lt;/div&gt;&lt;div&gt;HTTP/1.0+&lt;/div&gt;&lt;div&gt;在20世纪90年代中叶，很多流行的Web客户端和服务器都在飞快地向HTTP中添加各种特性，以满足快速扩张且在商业上十分成功的万维网的需要。其中很多特性，包括持久的keep-alive连接、虚拟主机支持，以及代理连接支持都被加入到HTTP之中，并成为非官方的事实标准。这种非正式的HTTP扩展版本通常称为HTTP/1.0+。&lt;/div&gt;&lt;div&gt;HTTP/1.1&lt;/div&gt;&lt;div&gt;HTTP/1.1重点关注的是孝正HTTP设计中的结构性缺陷，明确语义，引入重要的性能优化措施，并删除一些不好的特性。HTTP/1.1还包含了对20世纪90年代末正在发展中的更复杂的Web应用程序和部署方式的支持。HTTP/1.1是当前使用的HTTP版本。&lt;/div&gt;&lt;div&gt;HTTP-NG&lt;/div&gt;&lt;div&gt;HTTP-NG是HTTP/1.1后续结构的原型建议，它重点关注的是性能的大幅优化，以及更强大的服务逻辑远程执行框架。HTTP-NG的研究工作终止于1998年&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="190" y="110" width="800" height="350" as="geometry" />
        </mxCell>
        <mxCell id="lxqem7iOndfJjzKsoJMx-3" value="&lt;h1&gt;Web的结构组件&lt;/h1&gt;&lt;div&gt;在本章的概述中，我们重点介绍了两个Web应用程序（Web浏览器和Web服务器）是如何相互发送报文来实现基本事务处理的。在因特网上，要与很多Web应用程序进行交互。&lt;/div&gt;&lt;div&gt;下面列出一些比较重要的应用程序。&lt;/div&gt;&lt;div&gt;代理&lt;/div&gt;&lt;div&gt;位于客户端和服务器之间的HTTP中间实体。&lt;/div&gt;&lt;div&gt;缓存&lt;/div&gt;&lt;div&gt;HTTP的仓库，使常用页面的副本可以保存在离客户端更近的地方。&lt;/div&gt;&lt;div&gt;网关&lt;/div&gt;&lt;div&gt;连接其他应用程序的特殊Web服务器。&lt;/div&gt;&lt;div&gt;隧道&lt;/div&gt;&lt;div&gt;对HTTP通信报文进行盲转发的特殊代理。&lt;/div&gt;&lt;div&gt;Agent代理&lt;/div&gt;&lt;div&gt;发起自动HTTP请求的半智能Web客户端。&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="190" y="630" width="800" height="350" as="geometry" />
        </mxCell>
        <mxCell id="lxqem7iOndfJjzKsoJMx-4" value="&lt;h1&gt;代理&lt;/h1&gt;&lt;div&gt;http代理服务器是Web安全、应用集成以及性能优化的重要组成模块。&lt;/div&gt;&lt;div&gt;代理位于客户端和服务器之间，接受所有客户端的HTTP请求，并将这些请求转发给服务器（可能会对请求进行修改之后转发）。对用户来说，这些应用程序就是一个代理，代表用户访问服务器。&lt;/div&gt;&lt;div&gt;出于安全考虑，通常会将代理作为转发所有Web流量的可信任中间节点使用。代理还可以对请求和响应进行过滤&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="1090" y="425" width="800" height="125" as="geometry" />
        </mxCell>
        <mxCell id="lxqem7iOndfJjzKsoJMx-5" value="&lt;h1&gt;缓存&lt;/h1&gt;&lt;div&gt;Web缓存或代理缓存是一种特殊的HTTP代理服务器，可以将经过代理传送的常用文档复制保存起来。下一个请求同一文档的客户端可以享受缓存的私有副本所提供的服务了。&lt;/div&gt;&lt;div&gt;客户端从附近的缓存下载文档会比从远程Web服务器下载快得多。HTTP定义了很多功能，使得缓存更加高效，并规范了文档的新鲜度和缓存内容的隐私性。&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="1090" y="600" width="800" height="125" as="geometry" />
        </mxCell>
        <mxCell id="lxqem7iOndfJjzKsoJMx-6" value="&lt;h1&gt;网关&lt;/h1&gt;&lt;div&gt;网关(gateway)是一种特殊的服务器，作为其他服务器的中间实体使用。通常用于将HTTP流量转换成其他的协议。网关接受请求时就好像自己是资源的源端服务器一样。客户端可能并不知道自己正在与一个网关进行通信。&lt;/div&gt;&lt;div&gt;例如，一个HTTP/FTP网关会通过HTTP请求接收对FTP URI的请求，但通过FTP URI的请求，但通过FTP协议来获取文档。得到的文档会被封装成一条HTTP报文，发送给客户端。&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="1090" y="770" width="800" height="125" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
